// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkDir.API.Entities;

#nullable disable

namespace work_dir.Migrations
{
    [DbContext(typeof(WorkContext))]
    [Migration("20230506182145_AddShares")]
    partial class AddShares
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("work_dir.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDirectory")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentFolderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("work_dir.Entities.Share", b =>
                {
                    b.Property<Guid>("sharedWithId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sharedItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("sharedWithId", "sharedItemId");

                    b.HasIndex("sharedItemId");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("work_dir.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("work_dir.Entities.Item", b =>
                {
                    b.HasOne("work_dir.Entities.User", "User")
                        .WithMany("Items")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("work_dir.Entities.Share", b =>
                {
                    b.HasOne("work_dir.Entities.Item", "sharedItem")
                        .WithMany("Shares")
                        .HasForeignKey("sharedItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("work_dir.Entities.User", "sharedWith")
                        .WithMany("Shares")
                        .HasForeignKey("sharedWithId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sharedItem");

                    b.Navigation("sharedWith");
                });

            modelBuilder.Entity("work_dir.Entities.Item", b =>
                {
                    b.Navigation("Shares");
                });

            modelBuilder.Entity("work_dir.Entities.User", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Shares");
                });
#pragma warning restore 612, 618
        }
    }
}
